name: gds
# either manually started, or on a schedule
on: [ push, workflow_dispatch ]
jobs:
  gds:
    env:
        OPENLANE_TAG:           2023.02.14
        OPENLANE_IMAGE_NAME:    efabless/openlane:2023.05.19
        OPENLANE_ROOT:          /home/runner/openlane
        PDK_ROOT:               /home/runner/pdk
        PDK:                    sky130A

    # ubuntu
    runs-on: ubuntu-latest
    steps:
    # need the repo checked out
    - name: checkout repo
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: checkout tt-multiplexer repo
      uses: actions/checkout@v3
      with:
        repository: tinytapeout/tt-multiplexer
        path: tt-multiplexer

    # need python
    - name: setup python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - run: pip install -r tt-multiplexer/proto/requirements.txt

    # fetch the Verilog from Wokwi API
    - name: Install tools
      run: make setup

    # build OpenLane
    - name: openlane repo
      run: |
        rm -rf $OPENLANE_ROOT
        git clone --depth=1 --branch $OPENLANE_TAG https://github.com/The-OpenROAD-Project/OpenLane.git $OPENLANE_ROOT
        cd $OPENLANE_ROOT
        make
    
    - name: patch tt-multiplexer
      run: sed -i 's/parameter integer N_UM = 8,/parameter integer N_UM = 16,/' tt-multiplexer/proto/tt_mux.v

    - name: generate tt_user_module.v
      run: make gen-user-module

    # run OpenLane to build the GDS
    - name: make tt_ctrl GDS
      run: make tt_ctrl

    - name: make tt_mux GDS
      run: make tt_mux

    - name: make tt_um_test GDS
      run: make tt_um_test

    - name: make user_project_wrapper GDS
      run: make user_project_wrapper

    - name: upload GDS artifact
      uses: actions/upload-artifact@v3
      with:
          name: GDS
          path: openlane/user_project_wrapper/runs/user_project_wrapper/results/final/*
